1. git version - 版本號

2.設定全域使用者
git config --global user.name leo
git config --global user.email leo40412@gmail.com
git config --list

3.初始化倉庫
git init

4.倉庫狀態
git status (顯示狀態)

5.加入控管(暫存區)
git add filename
git add . (所有變動一次確認)

6.其餘狀態
U->Untrack(沒有追蹤，不會控管)
U->A(added)
A->M(Modified 修改)
A->D(Deleted 刪除)

7.刪除後恢復
git restore filename

8.檢視暫存區
git ls-files -s

9.檢視objects
git cat-file -t(型態) shal (前6碼)
git cat-file -p(內容) shal

10.加入倉庫
git commit -m "加入第一次的檔案儲存"
m(messenger)
git commit -am messenger

11.檢視log
git log
git log --oneline(一行顯示)
git log --graph(圖形化)

12.暫存區檔案恢復工作目錄(U)
git restore --staged filename (A->U)

13.倉庫區檔案恢復工作目錄(U)
git rm --cached filename

14.強制刪除(remove)
git rm -f filename

15.產生分支
git branch branch-name

16.檢視分支
git branch

17.切換分支
git checkout branch-name

18.捨棄變更
git checkout .

19.合併分支(基本上都是切換master去合併其他分支)
git checkout master
git merge branch-name

20.合併問題
同時間修改檔案並commit，合併後會產生衝突，需要進行
選擇跟確認

git add .
git commit -m "完成合併衝突確認"

21.刪除分支
git branch -D branch-name

22.VIM編輯器用法
1.使用 git commit 進入
2.使用 i 進入編輯模式
3.書寫完畢後使用esc鍵切換到下方命令列
4.輸入:wq離開(write+quit)
5.如果寫入失敗輸入:wq!(!=>強制模式)

23.程式練習
增加3個檔案跟commit log

24.切換commit-log
git checkout 物件前6碼
git checkout master<=切回

25.重置到某一個commit-log
git reset 物件前6碼

git reset --hard 物件前6碼

26.檢視所有歷程
git reflog

27.綁定雲端網址
git remote add origin https://github.com/leo40412/git-demo.git

28.檢視綁定的雲端網址
git remote -v

29.推送到雲端
git push 

30.下載專案
git clone https://github.com/leo40412/git-demo

31.git checkout -b branch-name (新增分支並切換)
git branch branch-name
git checkout branch-name

32.雲端同步到本地端
git pull

33.刪除雲端分支
git push --delete origin branch-name

34.合併上一次的commit log
git commit --amend

35.強制推送
git push -f